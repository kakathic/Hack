# Path
PHOME="$TOME/Module/Hack-Proxy"

if [ ! -e $PHOME/run/Vip.yaml ];then
mkdir -p "$PHOME/run"
echo 'proxies:' > $PHOME/run/Vip.yaml
fi

if [ ! -e $PHOME/Yacd-meta-gh-pages ];then
Taive "https://github.com/MetaCubeX/yacd/archive/refs/heads/gh-pages.zip" "$TEMP_DIR/Testvg.zip"
unzip -qo "$TEMP_DIR/Testvg.zip" -d "$PHOME"
rm -fr "$TEMP_DIR"/*
fi

[ -e $PHOME/config.yaml ] || Taive "https://raw.githubusercontent.com/kakathic/Hack/Proxy/config.yaml" $PHOME/config.yaml

if [ ! -e $TOME/bin/Clash ];then
Linkhhf="$(Xem "https://github.com/MetaCubeX/Clash.Meta/releases/tag/Prerelease-Alpha" | grep -m1 'Clash.Meta-android-arm64-alpha' | cut -d \" -f2)"
Taive "https://github.com$Linkhhf" "$TEMP_DIR/Clash.gz"
gzip -d "$TEMP_DIR/Clash.gz"
mv -f "$TEMP_DIR/Clash" $TOME/bin/Clash
chmod 0777 $TOME/bin/Clash
fi

[ "$(cat /proc/$(cat $PHOME/run/clash.pid)/cmdline)" ] || rm -fr $PHOME/run/clash.pid

cat << HiH | sed2
<?xml version="1.0" encoding="UTF-8" ?>
<items>

<text/>
<text title="Phi√™n b·∫£n" desc-sh="Clash -v;echo; cat $PHOME/run/error;echo"/>


<group>
<switch shell="hidden" reload="true" id="$RANDOM">
<title>Hack Proxy</title>
<desc>$(cat $PHOME/run/run.log)</desc>
<get>test -e $PHOME/run/clash.pid && echo 1 || echo 0</get>
<set>
$PHOME/scripts/service.sh
</set>
</switch>
</group>


<group>
<action shell="hidden" reload="true">
<title>Th√™m config</title>
<desc>nh·∫≠p ƒë∆∞·ªùng d·∫´n url t·ªõi config.yaml ƒë·ªÉ s·ª≠ d·ª•ng</desc>
<param name="conda" value-sh="Xset conda" type="text" desc="" placeholder="Url http" required="required" />
<set>
Tset conda "‚Ç¨conda"
Taive "‚Ç¨conda" $PHOME/config.yaml
</set>
</action>
</group>


<group>
<action shell="hidden" reload="true">
<title>Th√™m Sever</title>
<desc>Nh·∫≠p ƒë∆∞·ªùng d·∫´n File, URL ƒë·ªÉ th√™m v√†o list</desc>
<param name="Tensv" value-sh="Xset Tensv" type="text" desc="Nh·∫≠p Url ho·∫∑c T·ªáp tin n·∫øu nh·∫≠p c·∫£ hai n√≥ ch·ªâ nh·∫≠n Url" placeholder="T√™n Sever" required="required" />
<param name="Durl" type="text" title="Url" placeholder="http, vmess, trojan"/>
<param name="Ffile" type="file" title="T·ªáp tin" editable="true" suffix="yaml"/>
<set>
if [ ‚Ç¨(echo ‚Ç¨Durl | grep -cm1 'vmess:') == 1 ];then
Url () { echo "‚Ç¨Durl" | sed 's|vmess:\/\/||g' | base64 -d 2>/dev/null | sed -e 's|"||g' -e 's|,|\n|g' -e 's| ||g' -e 's|{||g' -e 's|}||g' -e 's|aid||g' | grep -m1 ‚Ç¨@: | cut -d: -f2; }
[ ‚Ç¨(echo "‚Ç¨(Url add)" | grep -cm1 'akamaized.net') == 1 ] && Tck="‚Ç¨(Url host)" || Tck="‚Ç¨(Url add)"
echo "#‚Ç¨Tensv
# ‚Ç¨Durl
  - { name: \"‚Ç¨Tensv\", type: vmess, server: ‚Ç¨Tck, uuid: ‚Ç¨(Url id), port: ‚Ç¨(Url port), alterId: 0, cipher: auto, skip-cert-verify: true, udp: true, tls: false, network: ws, ws-opts: { path: \"‚Ç¨(echo ‚Ç¨(Url path))\", headers: { Host: v.akamaized.net } } }
##‚Ç¨Tensv" >> $PHOME/run/Vip.yaml
elif [ ‚Ç¨(echo ‚Ç¨Durl | grep -cm1 'trojan:') == 1 ] || [ ‚Ç¨(echo ‚Ç¨Durl | grep -cm1 'ssr:') == 1 ] || [ ‚Ç¨(echo ‚Ç¨Durl | grep -cm1 'ss:') == 1 ];then
echo "#‚Ç¨Tensv
  ‚Ç¨Durl
##‚Ç¨Tensv" >> $PHOME/run/Vip.yaml
elif [ "‚Ç¨Durl" ];then
echo "
    ‚Ç¨Tensv:
        type: http
        url: "‚Ç¨Durl"
        path: ./run/‚Ç¨(date +"%H_%M_%S")_‚Ç¨RANDOM.yaml
        interval: 3600
        health-check:
            enable: true
            url: http://www.google.com
            interval: 150
##‚Ç¨Tensv
" >> "$PHOME/config.yaml"
sed -i "s/#Themv/      - ‚Ç¨Tensv\n#Themv/g" "$PHOME/config.yaml"
else
KKFi="‚Ç¨(date +"%H_%M_%S")_‚Ç¨RANDOM.yaml"
cp -rf "‚Ç¨Ffile" "$PHOME/run/‚Ç¨KKFi"
echo "
    ‚Ç¨Tensv:
        type: file
        path: ./run/‚Ç¨KKFi
        health-check:
            enable: true
            url: http://www.google.com
            interval: 150
##‚Ç¨Tensv
" >> "$PHOME/config.yaml"
sed -i "s/#Themv/      - ‚Ç¨Tensv\n#Themv/g" "$PHOME/config.yaml"
fi
curl -s -X PUT -H "Content-Type: application/json" -d '{"path": "$PHOME/config.yaml"}' http://127.0.0.1:9090/configs
</set>
</action>
</group>

<group>
<action reload="true" shell="hidden" title="Xo√° Sever" desc="L·ª±a ch·ªçn sever ƒë·ªÉ x√≥a b·ªè kh·ªèi config.yaml" >
<param name="Xsv" label="L·ª±a ch·ªçn" required="required" option-sh="grep '##' $PHOME/config.yaml | sed 's/##//g' | awk '{print ‚Ç¨0 &quot; üéüÔ∏è&quot;}';cat $PHOME/run/Vip.yaml | tr ',' '\n' | grep name: | cut -d \&quot; -f2 | awk '{print ‚Ç¨0 &quot; üé´&quot;}'"/>
<set>
if [ "‚Ç¨Xsv" ];then
Took="‚Ç¨(echo "‚Ç¨Xsv" | sed -e 's| üé´||g' -e 's| üéüÔ∏è||g')"
[ "‚Ç¨(echo "‚Ç¨Xsv" | grep -cm1 'üé´')" == 1 ] && sed -i -e "/#‚Ç¨Took/,/##‚Ç¨Took/d" -e '/^$/d' "$PHOME/run/Vip.yaml" || sed -i -e "/- ‚Ç¨Took/d" -e "/‚Ç¨Took/,/##‚Ç¨Took/d" -e '/^$/d' "$PHOME/config.yaml"
curl -s -X PUT -H "Content-Type: application/json" -d '{"path": "$PHOME/config.yaml"}' http://127.0.0.1:9090/configs
fi
</set>
</action>
</group>

<group>
<action shell="hidden" reload="true" title="T√πy ch·ªçn" desc="T·ªïng h·ª£p c√°c t√πy ch·ªçn nhanh" >
<param name="Luachokhb" desc=" " label="Ch·∫ø ƒë·ªô" value-sh="grep -m1 mode: $PHOME/config.yaml | cut -d : -f2" option-sh="echo rule; echo global; echo direct; echo script;"/>
<param name="ksjdbdjdj" desc=" " label="H·ªá th·ªëng" value-sh="grep -m1 stack: $PHOME/config.yaml | cut -d : -f2" option-sh="echo system; echo gvisor;"/>
<param name="eheheb" desc=" " label="Nh·∫≠t k√Ω" value-sh="grep -m1 log-level: $PHOME/config.yaml | cut -d : -f2" option-sh="echo silent; echo info; echo warning; echo error; echo debug;"/>
<param name="sjdjdh" value-sh="grep -m1 filter: $PHOME/config.yaml | cut -d \&quot; -f2" type="text" desc="¬£ƒêi·ªÅn t√™n c·∫ßn l·ªçc ·ªü sever Auto, Magic, b·ªè tr·ªëng ƒë·ªÉ h·ªßy l·ªçc¬£¬£V√≠ d·ª•: üáªüá≥|VN¬£" label="L·ªçc t√™n"/>
<set>
[ "‚Ç¨Luachokhb" ] && sed -i -e "s/‚Ç¨(grep -m1 mode: $PHOME/config.yaml)/mode: ‚Ç¨Luachokhb/g" "$PHOME/config.yaml"
[ "‚Ç¨ksjdbdjdj" ] && sed -i -e "s/‚Ç¨(grep -m1 stack: $PHOME/config.yaml)/  stack: ‚Ç¨ksjdbdjdj/g" "$PHOME/config.yaml"
[ "‚Ç¨eheheb" ] && sed -i -e "s/‚Ç¨(grep -m1 log-level: $PHOME/config.yaml)/log-level: ‚Ç¨eheheb/g" "$PHOME/config.yaml"
[ "‚Ç¨sjdjdh" ] && sed -i -e "s/‚Ç¨(grep -m1 filter: $PHOME/config.yaml)/      filter: \"‚Ç¨sjdjdh\"/g" "$PHOME/config.yaml" || sed -i -e "s/‚Ç¨(grep -m1 filter: $PHOME/config.yaml)/#      filter: \"‚Ç¨sjdjdh\"/g" "$PHOME/config.yaml"

curl -s -X PUT -H "Content-Type: application/json" -d '{"path": "$PHOME/config.yaml"}' http://127.0.0.1:9090/configs

</set>
</action>

</group>


<group>
<page html="http://127.0.0.1:9090/ui/#/proxies">
<title>Web Ui</title>
<desc>L·ª±a ch·ªçn c√°c sever v√† c√°c c√†i ƒë·∫∑t kh√°c</desc>
</page>
</group>


<group>
<page html="http://fastvpn-ph.speedtestcustom.com">
<title>Speed Test</title>
<desc>Ki·ªÉm tra t·ªëc ƒë·ªô t·∫£i xu·ªëng, l√™n, ping m·∫°ng</desc>
</page>

</group>


<group>
<page html="https://checkip.vip">
<title>Ki·ªÉm tra ip</title>
<desc>Xem ip v·ªã tr√≠ c·ªßa b·∫°n ƒëang ·ªü ƒë√¢u</desc>
</page>
</group>

</items>
HiH
