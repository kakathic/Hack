#!/bin/sh
id="2022"
Clash_data_dir="/data/data/com.kakathic.shells/files/TOME/Module/Hack-Proxy"
Clash_config_file="${Clash_data_dir}/config.yaml"
dns_port=`grep "listen" ${Clash_config_file} | awk -F ':' '{print $3}'`
tproxy_port=`grep "tproxy-port" ${Clash_config_file} | awk -F ':' '{print $2}'`

intranet=(0.0.0.0/8 10.0.0.0/8 100.64.0.0/10 127.0.0.0/8 169.254.0.0/16 172.16.0.0/12 192.0.0.0/24 192.0.2.0/24 192.88.99.0/24 192.168.0.0/16 198.51.100.0/24 203.0.113.0/24 224.0.0.0/4 233.252.0.0/24 240.0.0.0/4 255.255.255.255/32)

ipts() {
	iptables -w 100 $@
}
start_tproxy() {
    ip rule add fwmark ${id} lookup ${id}
    ip route add local default dev lo table ${id}
    
    ipts -t mangle -N CLASH_EXTERNAL
    ipts -t mangle -F CLASH_EXTERNAL
    for subnet in ${intranet[@]} ; do
        ipts -t mangle -A CLASH_EXTERNAL -d ${subnet} -j RETURN
    done
    ipts -t mangle -A CLASH_EXTERNAL -p tcp -j TPROXY --on-ip 127.0.0.1 --on-port ${tproxy_port} --tproxy-mark ${id}
    ipts -t mangle -A CLASH_EXTERNAL -p udp -j TPROXY --on-ip 127.0.0.1 --on-port ${tproxy_port} --tproxy-mark ${id}
    ipts -t mangle -A PREROUTING -j CLASH_EXTERNAL
    ipts -t mangle -N CLASH_LOCAL
    ipts -t mangle -F CLASH_LOCAL
    ipts -t mangle -A CLASH_LOCAL -m owner --uid-owner 0 --gid-owner 3005 -j RETURN

    for subnet in ${intranet[@]} ; do
        ipts -t mangle -A CLASH_LOCAL -d ${subnet} -j RETURN
    done
    
    ipts -t mangle -A CLASH_LOCAL -p tcp -j MARK --set-mark ${id}
    ipts -t mangle -A CLASH_LOCAL -p udp -j MARK --set-mark ${id}
    ipts -t mangle -A OUTPUT -j CLASH_LOCAL
    ipts -t mangle -N DIVERT
    ipts -t mangle -F DIVERT
    ipts -t mangle -A DIVERT -j MARK --set-mark ${id}
    ipts -t mangle -A DIVERT -j ACCEPT
    ipts -t mangle -I PREROUTING -p tcp -m socket -j DIVERT
    ipts -t nat -N CLASH_DNS_EXTERNAL
    ipts -t nat -F CLASH_DNS_EXTERNAL
    ipts -t nat -A CLASH_DNS_EXTERNAL -p tcp --dport 53 -j REDIRECT --to-ports ${dns_port}
    ipts -t nat -A CLASH_DNS_EXTERNAL -p udp --dport 53 -j REDIRECT --to-ports ${dns_port}
    ipts -t nat -A PREROUTING -j CLASH_DNS_EXTERNAL
    ipts -t nat -N CLASH_DNS_LOCAL
    ipts -t nat -F CLASH_DNS_LOCAL
    ipts -t nat -A CLASH_DNS_LOCAL -m owner --uid-owner 0 --gid-owner 3005 -j RETURN
    ipts -t nat -A CLASH_DNS_LOCAL -p tcp --dport 53 -j REDIRECT --to-ports ${dns_port}
    ipts -t nat -A CLASH_DNS_LOCAL -p udp --dport 53 -j REDIRECT --to-ports ${dns_port}
    ipts -t nat -A OUTPUT -j CLASH_DNS_LOCAL

}

stop_tproxy() {
    ip rule del fwmark ${id} table ${id}
    ip route del local default dev lo table ${id}

    ipts -t nat -D PREROUTING -j CLASH_DNS_EXTERNAL    
    ipts -t nat -D OUTPUT -j CLASH_DNS_LOCAL
    ipts -t nat -F CLASH_DNS_EXTERNAL
    ipts -t nat -X CLASH_DNS_EXTERNAL
    ipts -t nat -F CLASH_DNS_LOCAL
    ipts -t nat -X CLASH_DNS_LOCAL
    ipts -t mangle -D PREROUTING -j CLASH_EXTERNAL
    ipts -t mangle -D PREROUTING -p tcp -m socket -j DIVERT
    ipts -t mangle -D OUTPUT -j CLASH_LOCAL
    ipts -t mangle -F CLASH_EXTERNAL
    ipts -t mangle -X CLASH_EXTERNAL
    ipts -t mangle -F CLASH_LOCAL
    ipts -t mangle -X CLASH_LOCAL   
    ipts -t mangle -F DIVERT
    ipts -t mangle -X DIVERT

}

while getopts ":sk" signal ; do
    case ${signal} in
        s)
            start_tproxy
            ;;
        k)
            stop_tproxy
            ;;
        ?)
            echo ""
            ;;
    esac
done